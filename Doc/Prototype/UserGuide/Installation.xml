<?xml version="1.0" encoding="utf-8"?>
<!--
  Language: XML
  $Author$
  $Date$
  $Revision$
  $Copyright: [2010-2014] The CoSMo Company, All Rights Reserved $
-->
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
    "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<section>
  <title>Installation</title>
  <section>
    <title>Ubuntu 11.10 and later (32-bit)</title>
    <section>
      <title>Dependencies</title>
      <section>
        <title>CMake</title>
        <programlisting>
  sudo apt-get install cmake
  sudo apt-get install cmake-curses-gui
        </programlisting>
      </section>
      <section>
        <title>Git</title>
        <programlisting>
  sudo apt-get install git
        </programlisting>
      </section>
      <section>
        <title>Python 2.7</title>
        <programlisting>
  sudo apt-get install python2.7 python2.7-dev
        </programlisting>
        <section>
          <title>pip</title>
          <programlisting>
  sudo apt-get install python-pip
          </programlisting>
        </section>
        <section>
          <title>Other Python dependencies</title>
          <programlisting>
  sudo apt-get install python-numpy
  sudo apt-get install python-matplotlib
  sudo apt-get install python-scipy
  sudo apt-get install python-glpk
  sudo pip install bioservices
          </programlisting>
        </section>
      </section>
      <section>
        <title>SWIG 2.0</title>
        <programlisting>
  sudo apt-get install swig2.0
        </programlisting>
      </section>
      <section>
        <title>Doxygen</title>
        <programlisting>
  sudo apt-get install doxygen
        </programlisting>
      </section>
      <section>
        <title>CLAPACK</title>
        <programlisting>
  sudo apt-get install liblapack-dev libatlas-dev libatlas3gf-base
        </programlisting>
      </section>
      <section>
        <title>Expat</title>
        <programlisting>
  sudo apt-get install libexpat1 libexpat1-dev
        </programlisting>
      </section>
      <section>
        <title>Raptor</title>
        <programlisting>
  sudo apt-get install libraptor1 libraptor1-dev
        </programlisting>
      </section>
    </section>
    <section>
      <title>BioPreDyn integrated software suite prototype</title>
      <para>First of all the project source code must be checked-out using
<literal>Git</literal>. Open a command shell, navigate to the folder where the
<literal>BioPreDyn</literal> software should be installed and type:</para>
      <programlisting>
  git clone https://github.com/bmoreau/biopredyn.git
      </programlisting>
      <para>
When <literal>Git</literal> is done with it, open a shell, navigate to
the freshly checked-out biopredyn folder and type:
      </para>
      <programlisting>
  mkdir BUILD
  cd BUILD
  cmake ..
  make
  make install
  make test
      </programlisting>
      <para><literal>CMake</literal> options can be more finely tuned by using
<literal>ccmake</literal> instead of <literal>cmake</literal>.
      </para>
    </section>
  </section>
  <section>
    <title>Ubuntu 11.10 and later / Debian 7.x (64-bit)</title>
    <section>
      <title>Dependencies</title>
      <para>The procedure is the same as for the 32-bit architecture, except
for the following libraries:
      </para>
      <section>
        <title>Expat</title>
        <para>On 64-bit architecture, <literal>libexpat</literal> must be
recompiled with the <literal>-fPIC</literal> flag. Open a command prompt in a
folder where source code will be downloaded and type:
        </para>
        <programlisting>
  sudo apt-get source libexpat1-dev
  cd expat-2.1.0
  ./configure --with-pic
  make
  sudo make install
        </programlisting>
        <para>The package version number might be different; it does not change
the procedure, except for the name of the source folder.</para>
      </section>
      <section>
        <title>Raptor</title>
        <para>The same has to be done with <literal>libraptor</literal>:
        </para>
        <programlisting>
  sudo apt-get source libraptor1-dev
  cd raptor_1.4.21
  ./configure --with-pic
  make
  sudo make install
        </programlisting>
        <para>The package version number might be different; it does not change
the procedure, except for the name of the source folder.</para>
      </section>
    </section>
    <section>
      <title>BioPreDyn integrated software suite prototype</title>
      <para>Follow the same instructions as for the 32-bit architecture.</para>
    </section>
  </section>
  <section>
    <title>Windows 7 (64-bit)</title>
    <section>
      <title>Changing the path environment variable</title>
      <para>
Several <literal>Windows</literal> dependencies require the path environment
variable to be changed. To do so, open the
<emphasis role="bold">Control panel</emphasis>, then click on
<emphasis role='bold'>System</emphasis>; in the system panel window, click on
<emphasis role='bold'>Advanced system settings</emphasis> (see below).
      </para>
      <mediaobject>
        <imageobject>
          <imagedata width="100%" contentdepth="100%" align="center"
          scalefit="1" fileref="Sketches/system_panel.png" format="PNG"/>
        </imageobject>
      </mediaobject>
      <para>
In the system properties window, click on
<emphasis role='bold'>Environment Variables...</emphasis>; another window pops
up. Select <emphasis role='bold'>Path</emphasis> in the list of system
variables, and click <emphasis role='bold'>Edit...</emphasis> 
      </para>
      <mediaobject>
        <imageobject>
          <imagedata width="100%" contentdepth="100%" align="center"
          scalefit="1" fileref="Sketches/environment_variables.png"
          format="PNG"/>
        </imageobject>
      </mediaobject>
      <para>
Append the absolute path to the folder of interest at the end of the
<emphasis role='bold'>Variable value</emphasis> string, semicolon separated.
Be careful not to accidentally modify the rest of the variable value.
      </para>
      <mediaobject>
        <imageobject>
          <imagedata width="100%" contentdepth="100%" align="center"
          scalefit="1" fileref="Sketches/edit_system_variable.png"
          format="PNG"/>
        </imageobject>
      </mediaobject>
    </section>
    <section>
      <title>CMake</title>
      <para>Download the latest stable version from the
<ulink url="http://www.cmake.org/cmake/resources/software.html">CMake download
page</ulink> then run the installer and follow the instructions.
      </para>
    </section>
    <section>
      <title>Microsoft Visual Studio 2008</title>
      <para>Download Visual C++ 2008 Express from the
<ulink url="http://www.microsoft.com/en-us/download/details.aspx?id=10986">
Visual Studio download page</ulink> then run the executable and follow the
instructions.
      </para>
    </section>
    <section>
      <title>Git</title>
      <para>Download the latest Windows installer from the
<ulink url="http://git-scm.com/downloads">Git project download page</ulink>,
run the installer and follow the instructions.
      </para>
    </section>
    <section>
      <title>SWIG</title>
      <para>The latest version of swigwin can be downloaded from the
      <ulink url="http://www.swig.org/download.html">SWIG download page</ulink>.
Unzip it, then add the folder containing <literal>swig.exe</literal> to the Path
environment variable.
      </para>
    </section>
    <section>
      <title>Python 2.7</title>
      <para>Download the Windows installer (Python 2.7.X Windows Installer) from
the <ulink url="http://www.python.org/download/">Python download page</ulink>,
run it and follow the instructions. Do not use the 64-bit installer even for
64-bit versions of Windows.
      </para>
      <section>
        <title>easy_install</title>
        <para>Download ez_setup.py from the
<ulink url="https://bitbucket.org/pypa/setuptools/downloads">setuptools
download page</ulink> then open a command prompt, navigate to the folder where
ez_setup.py was downloaded and type: 
        </para>
        <programlisting>
  python ez_setup.py
        </programlisting>
        <para>
Now add [path/to/Python27]/Tools/Scripts to the environment Path variable.
        </para>
      </section>
      <section>
        <title>NumPy</title>
        <para>Download the latest win32 installer
(numpy-X.Y.Z-win32-superpack-python2.7.exe) at the
<ulink url="http://sourceforge.net/projects/numpy/files/NumPy/">
NumPy download page</ulink> and install it. 
        </para>
      </section>
      <section>
        <title>SciPy</title>
        <para>Download the latest win32 installer
(scipy-X.Y.Z-win32-superpack-python2.7.exe) at the
<ulink url="http://sourceforge.net/projects/scipy/files/scipy/">
SciPy download page</ulink> and install it. 
        </para>
      </section>
      <section>
        <title>matplotlib</title>
        <para>Download the latest win32 installer
(matplotlib-X.Y.Z.win32-py2.7.exe) at the
<ulink url="https://github.com/matplotlib/matplotlib/downloads/">matplotlib
download page</ulink> and install it.
        </para>
      </section>
    </section>
    <section>
      <title>Expat</title>
      <para>
Download the latest installer from the
<ulink url='http://sourceforge.net/projects/expat/files/expat_win32/'>Expat
Sourceforge repository</ulink> and install it. Add [path/to/Expat]/Source/lib
and [path/to/Expat]/Bin to the environment Path variable.
      </para>
    </section>
    <section>
      <title>CLAPACK</title>
      <para>
Download the latest <literal>CMake</literal> packaged version
(<literal>clapack-X.Y.Z-CMAKE.tgz</literal>) from the
<ulink url="http://www.netlib.org/clapack">project home page</ulink>, then
extract it. Navigate to the freshly created <literal>clapack</literal> folder,
and install the package:
      </para>
      <programlisting>
  cd clapack
  mkdir build
  cd build
  cmake -G "NMake Makefiles" ..
  nmake
      </programlisting>
    </section>
    <section>
      <title>BioPreDyn integrated software suite prototype</title>
      <para>First of all the project source code must be checked-out using
<literal>Git</literal>. Open a command shell, navigate to the folder where the
<literal>BioPreDyn</literal> software should be installed and type:</para>
      <programlisting>
  git clone https://github.com/bmoreau/biopredyn.git
      </programlisting>
      <para>When <literal>Git</literal> is done with it, open a Visual Studio
2008 Command Prompt, then navigate to the freshly checked-out biopredyn folder
and type:
      </para>
      <programlisting>
  mkdir BUILD
  cd BUILD
  cmake -G "NMake Makefiles" ..
  nmake install
  ctest
      </programlisting>
      <para><literal>CMake</literal> options can be more finely tuned in
<literal>CMake</literal> graphical user interface by typing the command
<literal>cmake-gui</literal> instead of <literal>cmake</literal>.
      </para>
    </section>
  </section>
</section>
