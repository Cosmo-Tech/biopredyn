<?xml version="1.0" encoding="utf-8"?>
<!--
  Language: XML
  $Author$
  $Date$
  $Revision$
  $Copyright: [2010-2013] The CoSMo Company, All Rights Reserved $
-->
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
    "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<section id="SoftwareSuiteRequirementsSpecifications">
  <title>Specifications</title>
  <section id="SpecificationsDescriptionOfWork">
    <title>Description of work</title>
    <para>As a starting point for this analysis we take the official
    <literal>BioPreDyn</literal> description of work. In this document, the
    integrated software suite requirements are briefly described in two
    distinct deliverables (three if we consider D7.2, which is the prototype -
    or proof of concept - of the two other deliverables):
      <blockquote>
        <para>D3.4) Integrated Suite of Tools: Integrated software-suite for
        iterative multi-scale model building providing tools for all the steps
        in the modeling cycle; documentation describing the suite, 
        <abbrev>incl.</abbrev> algorithm comparison and applications
        </para>
      </blockquote>
      <blockquote>
        <para>D7.2) Prototype Software for Testing: User-friendly version of
        prototype software for testing in a setting for industrial applications.
        </para>
      </blockquote>
      <blockquote>
        <para>D8.3) Integrate Software Suite: Integrated software suite
        implementing the methods and tools developed during this project in an
        interoperable, user-friendly and well-supported way
        </para>
      </blockquote>
    A few keywords can be extracted from these descriptions:
      <itemizedlist>
        <listitem>
          <formalpara>
            <title>Integrated software suite</title>
            <para>The objective of those deliverables therefore consist in
            combining several systems biology modeling tools together. Most of
            those tools are developed or maintained by consortium partners, but
            third-party tools will be considered. Tools used by consortium
            members include
            <ulink url="http://code.google.com/p/sbpipeline/wiki/DataRail">
            <literal>DataRail</literal></ulink>,
            <ulink url="http://www.cellnopt.org/"><literal>CellNOpt</literal>
            </ulink>, <ulink url="http://www.iim.csic.es/~amigo/index.html">
            <literal>AMIGO</literal></ulink>,
            <ulink url="http://www.copasi.org/tiki-view_articles.php">
            <literal>COPASI</literal></ulink>,
            <ulink url="http://www.cytoscape.org/"><literal>Cytoscape</literal>
            </ulink>...
            </para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>Modeling cycle</title>
            <para>The systems biology modeling cycle (as defined by the
            consortium) is consists in an eleven step cycle covering the main
            aspects of modeling, from data generation to model validation.
              <mediaobject id="SBModelBuildingCycle">
                <imageobject role="html">
                  <imagedata align="center" contentdepth="100%"
                    fileref="Sketches/systems_biology_cycle.png" format="PNG"
                    scalefit="1" width="100%" />
                </imageobject>
                <caption>Specifications [1]: eleven step systems biology model
                building cycle
                </caption>
              </mediaobject>
            The software suite should therefore cover most of these steps,
            through the tools it will aggregates.
            </para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>User-friendly</title>
            <para>The chosen implementation of the <literal>BioPreDyn</literal>
            software suite will have to be easily usable by non-developer
            people; a graphical user interface is required here.</para>
          </formalpara>
        </listitem>
      </itemizedlist>
    </para>
  </section>
  <section id="SpecificationsCaseStudy">
    <title>Case study</title>
    <para>As a pre-study for the software suite development, several tools and
    work flows used in the consortium were investigated. It aimed at detecting
    additional needs or constraints not expressed in the original description
    of work, and include them in the final design.</para>
    <section id="CaseStudyAMIGO">
      <title>AMIGO</title>
      <formalpara>
        <title>Summary</title>
        <para>
        <ulink url="http://www.iim.csic.es/~amigo/index.html">
        <literal>AMIGO</literal></ulink> is
        a <ulink url="http://www.mathworks.com/products/matlab/index.html">
        <literal>Matlab</literal></ulink> tool box for systems biology model identification. It
        accepts <literal>Matlab</literal>, <literal>Fortran</literal> and
        <acronym>SBML</acronym> files as input model files, and
        <literal>Matlab</literal> files as input data files. Model
        identification steps can be generated in <acronym>C</acronym> or
        <literal>Fortran</literal> before being executed in order to improve
        performances.</para>
      </formalpara>
      <formalpara>
        <title>Languages</title>
        <para><literal>Matlab</literal>, <acronym>C</acronym>,
        <literal>Fortran</literal></para>
      </formalpara>
      <formalpara>
        <title>Model building cycle steps</title>
        <para>The following steps of the systems biology model building cycle
        are implemented in <literal>AMIGO</literal>:
          <itemizedlist>
            <listitem>
              <para>4. <emphasis>A priori</emphasis> identifiability analysis
              </para>
            </listitem>
            <listitem>
              <para>5. Model fitting / Parameter estimation
              </para>
            </listitem>
            <listitem>
              <para>6. <emphasis>A posteriori</emphasis> identifiability
              analysis</para>
            </listitem>
            <listitem>
              <para>9. Optimal experimental design (<acronym>OED</acronym>)
              </para>
            </listitem>
            <listitem>
              <para>10. Global sensitivity analysis
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </formalpara>
      <formalpara>
        <title>Needs</title>
        <para><literal>AMIGO</literal> developers expressed the following needs
        for the integrated software suite:
          <itemizedlist>
            <listitem>
              <para>Data alignment standards</para>
            </listitem>
            <listitem>
              <para>Portable task, experiment and report generation</para>
            </listitem>
            <listitem>
              <para>Interoperability with third-party solvers</para>
            </listitem>
          </itemizedlist>
        </para>
      </formalpara>
    </section>
    <section id="CaseStudyFlyTools">
      <title>Fly suite</title>
      <formalpara>
        <title>Summary</title>
        <para>Collection of tools dedicated to developmental
        <ulink url="http://en.wikipedia.org/wiki/Gene_regulatory_network">gene
        regulatory network</ulink> (<acronym>GRN</acronym>) study in
        <emphasis>Drosophila melanogaster</emphasis> embryos. The different
        tools cover the analysis from the embryo picture analysis to the
        <acronym>GRN</acronym> weight inference from experimental data:
          <itemizedlist>
            <listitem>
              <para><literal>fly_gui</literal> is a <literal>Java</literal>
              software tool for gene expression profile extraction from stained
              fly embryo pictures. It generates custom data files containing the
              gene expression data for each gene, time point and cell nucleus in
              the selected stripe.
              </para>
            </listitem>
            <listitem>
              <para><literal>fly_sa</literal> is a <literal>C++</literal> tool
              implementing a <link linkend="ReferencesSimulatedAnnealing">
              parallel version of the
              Lam simulated annealing algorithm</link> applied to
              <acronym>GRN</acronym> inference.</para>
            </listitem>
            <listitem>
              <para><literal>Python</literal> scripts are used besides those
              tools in order to compute intermediate values such as the
              promoter strength, diffusion parameters... and write them in the
              data file.</para>
            </listitem>
          </itemizedlist>
        </para>
      </formalpara>
      <formalpara>
        <title>Languages</title>
        <para><literal>Java</literal>, <literal>C++</literal>,
        <literal>Python</literal>.</para>
      </formalpara>
      <formalpara>
        <title>Model building cycle</title>
        <para>The following steps of the systems biology model building cycle
        are implemented in the fly suite:
          <itemizedlist>
            <listitem>
              <para>1. Data extraction</para>
            </listitem>
            <listitem>
              <para>2. Exploratory data analysis</para>
            </listitem>
            <listitem>
              <para>5. Model fitting / Parameter estimation</para>
            </listitem>
          </itemizedlist>
        </para>
      </formalpara>
      <formalpara>
        <title>Needs</title>
        <para>Fly suite developers expressed the following needs regarding the
        integration of their tools in the <literal>BioPreDyn</literal> software
        suite:
          <itemizedlist>
            <listitem>
              <para>Interoperability with third-party solvers</para>
            </listitem>
            <listitem>
              <para>Standard data-alignment tools (compatibility with
              <acronym>SBML</acronym>)</para>
            </listitem>
          </itemizedlist>
        </para>
      </formalpara>
    </section>
    <section id="CaseStudyCOPASI">
      <title>COPASI</title>
      <formalpara>
        <title>Summary</title>
        <para><ulink url="http://www.copasi.org/tiki-view_articles.php">
        <literal>COPASI</literal></ulink> is a <literal>C++</literal> software
        tool for biochemical networks analysis; it implements a dedicated
        language called <ulink url="http://www.copasi.org/static/schemadoc/">
        <literal>CopasiML</literal></ulink> for
        encoding all the aspects of a <literal>COPASI</literal> simulation.
        <literal>COPASI</literal> accepts <acronym>SBML</acronym> as an input
        format for biochemical models.
        </para>
      </formalpara>
      <formalpara>
        <title>Languages</title>
        <para><literal>C++</literal>, <literal>Qt</literal>.</para>
      </formalpara>
      <formalpara>
        <title>Model building cycle</title>
        <para>The following steps of the systems biology model building cycle
        are implemented in COPASI:
          <itemizedlist>
            <listitem>
              <para>4. <emphasis>A priori</emphasis> identifiability analysis
              </para>
            </listitem>
            <listitem>
              <para>5. Model fitting / Parameter estimation</para>
            </listitem>
            <listitem>
              <para>6. <emphasis>A posteriori</emphasis> identifiability
              analysis</para>
            </listitem>
          </itemizedlist>
        </para>
      </formalpara>
      <formalpara>
        <title>Needs</title>
        <para><literal>COPASI</literal> developers expressed the following needs
        regarding the integration of their tools in the
        <literal>BioPreDyn</literal> software suite:
          <itemizedlist>
            <listitem>
              <para>Interoperability with third-party tools (AMIGO)</para>
            </listitem>
          </itemizedlist>
        </para>
      </formalpara>
    </section>
  </section>
  <section id="SpecificationsSummary">
    <title>Summary</title>
    <para>With only three software tools / work flows investigated, several
    common characteristics appear:</para>
    <itemizedlist>
      <listitem>
        <formalpara>
          <title>Programming languages</title>
          <para>The described tools use a wide spectrum of programming
          languages: <literal>C</literal>, <literal>C++</literal>,
          <literal>Java</literal>, <literal>Matlab</literal>,
          <literal>Fortran</literal>...</para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title>Data / model alignment</title>
          <para>Portable standard formats for exchanging models and / or data
          are a major concern for all the development teams we met during this
          preliminary investigation; one model format seems to emerge:
          <literal>SBML</literal>. Besides, a format encoding the model, the
          simulation, the initial conditions and the results in a same file
          is requested.</para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title>Systems biology cycle steps</title>
          <para>Several steps of the model building cycle are covered by the
          tools described here, and several are not. Most developers / users
          requested the possibility to use alternative tools for specific steps
          in their analysis pipelines.</para>
        </formalpara>
      </listitem>
    </itemizedlist>
  </section>
</section>