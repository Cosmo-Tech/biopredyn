/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace libsbml {

using System;
using System.Runtime.InteropServices;

public class packageErrorTableEntry : IDisposable {
	private HandleRef swigCPtr;
	protected bool swigCMemOwn;
	
	internal packageErrorTableEntry(IntPtr cPtr, bool cMemoryOwn)
	{
		swigCMemOwn = cMemoryOwn;
		swigCPtr    = new HandleRef(this, cPtr);
	}
	
	internal static HandleRef getCPtr(packageErrorTableEntry obj)
	{
		return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
	}
	
	internal static HandleRef getCPtrAndDisown (packageErrorTableEntry obj)
	{
		HandleRef ptr = new HandleRef(null, IntPtr.Zero);
		
		if (obj != null)
		{
			ptr             = obj.swigCPtr;
			obj.swigCMemOwn = false;
		}
		
		return ptr;
	}

  ~packageErrorTableEntry() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          libsbmlPINVOKE.delete_packageErrorTableEntry(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public long code {
    set {
      libsbmlPINVOKE.packageErrorTableEntry_code_set(swigCPtr, value);
    } 
    get {
      uint ret = libsbmlPINVOKE.packageErrorTableEntry_code_get(swigCPtr);
      return ret;
    } 
  }

  public string shortMessage {
    set {
      libsbmlPINVOKE.packageErrorTableEntry_shortMessage_set(swigCPtr, value);
    } 
    get {
      string ret = libsbmlPINVOKE.packageErrorTableEntry_shortMessage_get(swigCPtr);
      return ret;
    } 
  }

  public long category {
    set {
      libsbmlPINVOKE.packageErrorTableEntry_category_set(swigCPtr, value);
    } 
    get {
      uint ret = libsbmlPINVOKE.packageErrorTableEntry_category_get(swigCPtr);
      return ret;
    } 
  }

  public long l3v1_severity {
    set {
      libsbmlPINVOKE.packageErrorTableEntry_l3v1_severity_set(swigCPtr, value);
    } 
    get {
      uint ret = libsbmlPINVOKE.packageErrorTableEntry_l3v1_severity_get(swigCPtr);
      return ret;
    } 
  }

  public string message {
    set {
      libsbmlPINVOKE.packageErrorTableEntry_message_set(swigCPtr, value);
    } 
    get {
      string ret = libsbmlPINVOKE.packageErrorTableEntry_message_get(swigCPtr);
      return ret;
    } 
  }

  public packageReferenceEntry reference {
    set {
      libsbmlPINVOKE.packageErrorTableEntry_reference_set(swigCPtr, packageReferenceEntry.getCPtr(value));
    } 
    get {
      IntPtr cPtr = libsbmlPINVOKE.packageErrorTableEntry_reference_get(swigCPtr);
      packageReferenceEntry ret = (cPtr == IntPtr.Zero) ? null : new packageReferenceEntry(cPtr, false);
      return ret;
    } 
  }

  public packageErrorTableEntry() : this(libsbmlPINVOKE.new_packageErrorTableEntry(), true) {
  }

}

}
